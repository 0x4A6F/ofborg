# Generated by carnix 0.5.0: carnix ./../ofborg/Cargo.lock --output ./ofborg-carnix.nix
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    hasFeature = feature:
      lib.lists.any
        (originName: feature.${originName})
        (builtins.attrNames feature);

    hasDefault = feature:
      let defaultFeatures = builtins.attrNames (feature."default" or {}); in
      (defaultFeatures == [])
      || (lib.lists.any (originName: feature."default".${originName}) defaultFeatures);

    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if featureName != "" && hasFeature feat.${featureName} then
        [ featureName ] ++ features
      else
        features
    ) (if hasDefault feat then [ "default" ] else []) (builtins.attrNames feat);
    aho_corasick_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "aho-corasick";
      version = "0.5.3";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "1igab46mvgknga3sxkqc917yfff0wsjxjzabdigmh240p5qxqlnn";
      libName = "aho_corasick";
      crateBin = [ {  name = "aho-corasick-dot"; } ];
      inherit dependencies buildDependencies features;
    };
    aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "aho-corasick";
      version = "0.6.4";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
      libName = "aho_corasick";
      crateBin = [ {  name = "aho-corasick-dot"; } ];
      inherit dependencies buildDependencies features;
    };
    amq_proto_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "amq-proto";
      version = "0.1.0";
      authors = [ "Andrii Dmytrenko <refresh.xss@gmail.com>" ];
      sha256 = "0333fsph61q9nxbx6h8hdxjmpabjm9vmsfc6q5agy801x35r4ml9";
      inherit dependencies buildDependencies features;
    };
    amqp_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "amqp";
      version = "0.1.0";
      authors = [ "Andrii Dmytrenko <andrey@reevoo.com>" ];
      src = fetchgit {
         url = "https://github.com/grahamc/rust-amqp.git";
         rev = "46c56b3c4d0b30cbac6c0cc83033f2784f99f0ee";
         sha256 = "0y8axrp6k3jszmvd5mwd9hy9i7cndgksb2xq30x02jhsdkicjr7b";
      };
      inherit dependencies buildDependencies features;
    };
    antidote_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "antidote";
      version = "1.0.0";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "1x2wgaw603jcjwsfvc8s2rpaqjv0aqj8mvws2ahhkvfnwkdf7icw";
      inherit dependencies buildDependencies features;
    };
    backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "backtrace";
      version = "0.3.5";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
      sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
      inherit dependencies buildDependencies features;
    };
    backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "backtrace-sys";
      version = "0.1.16";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
      sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "base64";
      version = "0.6.0";
      authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
      sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
      inherit dependencies buildDependencies features;
    };
    bit_vec_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "bit-vec";
      version = "0.4.4";
      authors = [ "Alexis Beingessner <a.beingessner@gmail.com>" ];
      sha256 = "06czykmn001z6c3a4nsrpc3lrj63ga0kzp7kgva9r9wylhkkqpq9";
      inherit dependencies buildDependencies features;
    };
    bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "bitflags";
      version = "0.9.1";
      authors = [ "The Rust Project Developers" ];
      sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
      inherit dependencies buildDependencies features;
    };
    bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "bitflags";
      version = "1.0.1";
      authors = [ "The Rust Project Developers" ];
      sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
      inherit dependencies buildDependencies features;
    };
    byteorder_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "byteorder";
      version = "0.5.3";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "0zsr6b0m0yl5c0yy92nq7srfpczd1dx1xqcx3rlm5fbl8si9clqx";
      inherit dependencies buildDependencies features;
    };
    byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "byteorder";
      version = "1.2.1";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
      inherit dependencies buildDependencies features;
    };
    cc_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "cc";
      version = "1.0.4";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
      sha256 = "1bhxmq231c62amw14lghz5xi2cjvm0r7kp3ajsj6zqw9843zwkfw";
      inherit dependencies buildDependencies features;
    };
    cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "cfg-if";
      version = "0.1.2";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
      sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
      inherit dependencies buildDependencies features;
    };
    core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "core-foundation";
      version = "0.2.3";
      authors = [ "The Servo Project Developers" ];
      sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
      inherit dependencies buildDependencies features;
    };
    core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "core-foundation-sys";
      version = "0.2.3";
      authors = [ "The Servo Project Developers" ];
      sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "dtoa";
      version = "0.4.2";
      authors = [ "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
      inherit dependencies buildDependencies features;
    };
    enum_primitive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "enum_primitive";
      version = "0.1.1";
      authors = [ "Anders Kaseorg <andersk@mit.edu>" ];
      sha256 = "1a225rlsz7sz3nn14dar71kp2f9v08s3rwl6j55xp51mv01f695y";
      inherit dependencies buildDependencies features;
    };
    env_logger_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "env_logger";
      version = "0.3.5";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1mvxiaaqsyjliv1mm1qaagjqiccw11mdyi3n9h9rf8y6wj15zycw";
      inherit dependencies buildDependencies features;
    };
    env_logger_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "env_logger";
      version = "0.4.3";
      authors = [ "The Rust Project Developers" ];
      sha256 = "0nrx04p4xa86d5kc7aq4fwvipbqji9cmgy449h47nc9f1chafhgg";
      inherit dependencies buildDependencies features;
    };
    error_chain_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "error-chain";
      version = "0.10.0";
      authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
      sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
      inherit dependencies buildDependencies features;
    };
    foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "foreign-types";
      version = "0.3.2";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
      inherit dependencies buildDependencies features;
    };
    foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "foreign-types-shared";
      version = "0.1.1";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
      inherit dependencies buildDependencies features;
    };
    fs2_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "fs2";
      version = "0.4.3";
      authors = [ "Dan Burkert <dan@danburkert.com>" ];
      sha256 = "1crj36rhhpk3qby9yj7r77w7sld0mzab2yicmphbdkfymbmp3ldp";
      inherit dependencies buildDependencies features;
    };
    fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "fuchsia-zircon";
      version = "0.3.3";
      authors = [ "Raph Levien <raph@google.com>" ];
      sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
      inherit dependencies buildDependencies features;
    };
    fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "fuchsia-zircon-sys";
      version = "0.3.3";
      authors = [ "Raph Levien <raph@google.com>" ];
      sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
      inherit dependencies buildDependencies features;
    };
    httparse_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "httparse";
      version = "1.2.4";
      authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
      sha256 = "169grgxpsq0jaa2fk913z692a6qi8c2n1kypsay124b37720d8ll";
      inherit dependencies buildDependencies features;
    };
    hubcaps_0_3_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "hubcaps";
      version = "0.3.16";
      authors = [ "softprops <d.tangren@gmail.com>" ];
      src = fetchgit {
         url = "https://github.com/grahamc/hubcaps.git";
         rev = "3ddb700e6b51d7ffc2edd3b001987b4fa124d0e2";
         sha256 = "1ivh9jjcjnbm5fsbr0w4wa1wmka6hsq0zjh148f9hs3q93hspr71";
      };
      inherit dependencies buildDependencies features;
    };
    hyper_0_10_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "hyper";
      version = "0.10.13";
      authors = [ "Sean McArthur <sean.monstar@gmail.com>" "Jonathan Reem <jonathan.reem@gmail.com>" ];
      sha256 = "1ps970916ciphcx3zrqklfay1488ky6yk7kr8kvnr363v6w9wfp5";
      inherit dependencies buildDependencies features;
    };
    hyper_native_tls_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "hyper-native-tls";
      version = "0.2.4";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "1niqi1z1a3xfb9qaawy3fzrgaf8qwr925fqjswlrdjczq176f1iy";
      inherit dependencies buildDependencies features;
    };
    idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "idna";
      version = "0.1.4";
      authors = [ "The rust-url developers" ];
      sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
      inherit dependencies buildDependencies features;
    };
    itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "itoa";
      version = "0.3.4";
      authors = [ "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
      inherit dependencies buildDependencies features;
    };
    kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "kernel32-sys";
      version = "0.2.2";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
      libName = "kernel32";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "language-tags";
      version = "0.2.2";
      authors = [ "Pyfisch <pyfisch@gmail.com>" ];
      sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
      inherit dependencies buildDependencies features;
    };
    lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "lazy_static";
      version = "0.2.11";
      authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
      sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
      inherit dependencies buildDependencies features;
    };
    lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "lazy_static";
      version = "1.0.0";
      authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
      sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
      inherit dependencies buildDependencies features;
    };
    libc_0_2_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "libc";
      version = "0.2.36";
      authors = [ "The Rust Project Developers" ];
      sha256 = "01633h4yfqm0s302fm0dlba469bx8y6cs4nqc8bqrmjqxfxn515l";
      inherit dependencies buildDependencies features;
    };
    linked_hash_map_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "linked-hash-map";
      version = "0.4.2";
      authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
      sha256 = "04da208h6jb69f46j37jnvsw2i1wqplglp4d61csqcrhh83avbgl";
      inherit dependencies buildDependencies features;
    };
    log_0_3_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "log";
      version = "0.3.8";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1c43z4z85sxrsgir4s1hi84558ab5ic7jrn5qgmsiqcv90vvn006";
      inherit dependencies buildDependencies features;
    };
    lru_cache_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "lru-cache";
      version = "0.1.1";
      authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
      sha256 = "1hl6kii1g54sq649gnscv858mmw7a02xj081l4vcgvrswdi2z8fw";
      inherit dependencies buildDependencies features;
    };
    matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "matches";
      version = "0.1.6";
      authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
      sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
      libPath = "lib.rs";
      inherit dependencies buildDependencies features;
    };
    md5_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "md5";
      version = "0.3.6";
      authors = [ "Ivan Ukhov <ivan.ukhov@gmail.com>" "Konstantin Stepanov <milezv@gmail.com>" "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>" "Nathan Musoke <nathan.musoke@gmail.com>" "Tony Arcieri <bascule@gmail.com>" ];
      sha256 = "0q6lxmjqxc6vcsyyaggank89bw8g64spw29hl5yvn8l0f4an03nd";
      inherit dependencies buildDependencies features;
    };
    memchr_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "memchr";
      version = "0.1.11";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
      sha256 = "0x73jghamvxxq5fsw9wb0shk5m6qp3q6fsf0nibn0i6bbqkw91s8";
      inherit dependencies buildDependencies features;
    };
    memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "memchr";
      version = "2.0.1";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
      sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
      inherit dependencies buildDependencies features;
    };
    mime_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "mime";
      version = "0.2.6";
      authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
      sha256 = "1skwwa0j3kqd8rm9387zgabjhp07zj99q71nzlhba4lrz9r911b3";
      inherit dependencies buildDependencies features;
    };
    native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "native-tls";
      version = "0.1.5";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
      inherit dependencies buildDependencies features;
    };
    num_traits_0_1_41_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "num-traits";
      version = "0.1.41";
      authors = [ "The Rust Project Developers" ];
      sha256 = "134gv890n1gv8v0jys55k0940gqp2hibgf1fs8q9jmyk2xp1jp9m";
      inherit dependencies buildDependencies features;
    };
    num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "num_cpus";
      version = "1.8.0";
      authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
      sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
      inherit dependencies buildDependencies features;
    };
    ofborg_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "ofborg";
      version = "0.1.0";
      authors = [ "Graham Christensen <graham@grahamc.com>" ];
      src = ./../ofborg;
      inherit dependencies buildDependencies features;
    };
    openssl_0_9_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "openssl";
      version = "0.9.23";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "1s773jsg94j1f2n87y6csqmy19pbh3f048vzrrimm7hhk9a20xsm";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    openssl_sys_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "openssl-sys";
      version = "0.9.24";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "0f9dppj6x1ynwg1mim9d4y5nm9i2j92dmdf2zhh38dv8h3zhmxkg";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "percent-encoding";
      version = "1.0.1";
      authors = [ "The rust-url developers" ];
      sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
      libPath = "lib.rs";
      inherit dependencies buildDependencies features;
    };
    pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "pkg-config";
      version = "0.3.9";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
      sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
      inherit dependencies buildDependencies features;
    };
    quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "quote";
      version = "0.3.15";
      authors = [ "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
      inherit dependencies buildDependencies features;
    };
    rand_0_3_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "rand";
      version = "0.3.20";
      authors = [ "The Rust Project Developers" ];
      sha256 = "0infxxbsf6k3a54kpw0081d95rwhsgn61qznpyy8mk1hlr608810";
      inherit dependencies buildDependencies features;
    };
    redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "redox_syscall";
      version = "0.1.37";
      authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
      sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
      libName = "syscall";
      inherit dependencies buildDependencies features;
    };
    regex_0_1_80_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "regex";
      version = "0.1.80";
      authors = [ "The Rust Project Developers" ];
      sha256 = "0y4s8ghhx6sgzb35irwivm3w0l2hhqhmdcd2px9hirqnkagal9l6";
      inherit dependencies buildDependencies features;
    };
    regex_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "regex";
      version = "0.2.5";
      authors = [ "The Rust Project Developers" ];
      sha256 = "04s62pldipr1aamifrq9x93x17y4yavnpr8jbxyjmlbzkz3xnwch";
      inherit dependencies buildDependencies features;
    };
    regex_syntax_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "regex-syntax";
      version = "0.3.9";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1mzhphkbwppwd1zam2jkgjk550cqgf6506i87bw2yzrvcsraiw7m";
      inherit dependencies buildDependencies features;
    };
    regex_syntax_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "regex-syntax";
      version = "0.4.2";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1pch2dmdnh712c9d2k7mxbkl6wbr433x6asip65mp76cn8syrqdw";
      inherit dependencies buildDependencies features;
    };
    rustc_demangle_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "rustc-demangle";
      version = "0.1.5";
      authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
      sha256 = "096kkcx9j747700fhxj1s4rlwkj21pqjmvj64psdj6bakb2q13nc";
      inherit dependencies buildDependencies features;
    };
    safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "safemem";
      version = "0.2.0";
      authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
      sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
      inherit dependencies buildDependencies features;
    };
    schannel_0_1_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "schannel";
      version = "0.1.10";
      authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
      sha256 = "0g6dw0lng1332517kya5h1wlwpb6mml2ywgx431kdm4421kpm2zl";
      inherit dependencies buildDependencies features;
    };
    security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "security-framework";
      version = "0.1.16";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
      inherit dependencies buildDependencies features;
    };
    security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "security-framework-sys";
      version = "0.1.16";
      authors = [ "Steven Fackler <sfackler@gmail.com>" ];
      sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    serde_1_0_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "serde";
      version = "1.0.27";
      authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "1mpx1p6rjhajhxwapxsswqi7fdh3ms2cz6aj0h615wx17ckl6cyw";
      inherit dependencies buildDependencies features;
    };
    serde_derive_1_0_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "serde_derive";
      version = "1.0.27";
      authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "0h70hzs973fjhmipmhxy1sh4s1dbj984vwlkcxqfjipwgggj1m19";
      procMacro = true;
      inherit dependencies buildDependencies features;
    };
    serde_derive_internals_0_19_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "serde_derive_internals";
      version = "0.19.0";
      authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "12gg08kq295npvhrl1ryzgn0rn2az4kvmj7zlzdda4094qwqgrzz";
      inherit dependencies buildDependencies features;
    };
    serde_json_1_0_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "serde_json";
      version = "1.0.9";
      authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "1pcclssyndz54cncsizkqrblmqqr1p2g6xhkpwldbk6qc95m4yw3";
      inherit dependencies buildDependencies features;
    };
    syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "syn";
      version = "0.11.11";
      authors = [ "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
      inherit dependencies buildDependencies features;
    };
    synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "synom";
      version = "0.11.3";
      authors = [ "David Tolnay <dtolnay@gmail.com>" ];
      sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
      inherit dependencies buildDependencies features;
    };
    tempdir_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "tempdir";
      version = "0.3.5";
      authors = [ "The Rust Project Developers" ];
      sha256 = "0rirc5prqppzgd15fm8ayan349lgk2k5iqdkrbwrwrv5pm4znsnz";
      inherit dependencies buildDependencies features;
    };
    tempfile_2_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "tempfile";
      version = "2.2.0";
      authors = [ "Steven Allen <steven@stebalien.com>" ];
      sha256 = "1z3l901ipvi0s0mdppw4lwfa77ydb22rfnf6y9sh0pifj7ah5drf";
      inherit dependencies buildDependencies features;
    };
    thread_id_2_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "thread-id";
      version = "2.0.0";
      authors = [ "Ruud van Asseldonk <dev@veniogames.com>" ];
      sha256 = "06i3c8ckn97i5rp16civ2vpqbknlkx66dkrl070iw60nawi0kjc3";
      inherit dependencies buildDependencies features;
    };
    thread_local_0_2_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "thread_local";
      version = "0.2.7";
      authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
      sha256 = "19p0zrs24rdwjvpi10jig5ms3sxj00pv8shkr9cpddri8cdghqp7";
      inherit dependencies buildDependencies features;
    };
    thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "thread_local";
      version = "0.3.5";
      authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
      sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
      inherit dependencies buildDependencies features;
    };
    time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "time";
      version = "0.1.39";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
      inherit dependencies buildDependencies features;
    };
    traitobject_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "traitobject";
      version = "0.1.0";
      authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
      sha256 = "10hi8pl361l539g4kg74mcrhn7grmwlar4jl528ddn2z2jvb7lw3";
      inherit dependencies buildDependencies features;
    };
    typeable_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "typeable";
      version = "0.1.2";
      authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
      sha256 = "0lvff10hwyy852m6r11msyv1rpgpnapn284i8dk0p0q5saqvbvnx";
      inherit dependencies buildDependencies features;
    };
    unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "unicase";
      version = "1.4.2";
      authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
      sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "unicode-bidi";
      version = "0.3.4";
      authors = [ "The Servo Project Developers" ];
      sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
      libName = "unicode_bidi";
      inherit dependencies buildDependencies features;
    };
    unicode_normalization_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "unicode-normalization";
      version = "0.1.5";
      authors = [ "kwantam <kwantam@gmail.com>" ];
      sha256 = "0hg29g86fca7b65mwk4sm5s838js6bqrl0gabadbazvbsgjam0j5";
      inherit dependencies buildDependencies features;
    };
    unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "unicode-xid";
      version = "0.0.4";
      authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
      sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
      inherit dependencies buildDependencies features;
    };
    unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "unreachable";
      version = "1.0.0";
      authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
      sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
      inherit dependencies buildDependencies features;
    };
    url_1_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "url";
      version = "1.6.0";
      authors = [ "The rust-url developers" ];
      sha256 = "1bvzl4dvjj84h46ai3x23wyafa2wwhchj08vr2brf25dxwc7mg18";
      inherit dependencies buildDependencies features;
    };
    utf8_ranges_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "utf8-ranges";
      version = "0.1.3";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "1cj548a91a93j8375p78qikaiam548xh84cb0ck8y119adbmsvbp";
      inherit dependencies buildDependencies features;
    };
    utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "utf8-ranges";
      version = "1.0.0";
      authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
      sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
      inherit dependencies buildDependencies features;
    };
    uuid_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "uuid";
      version = "0.4.0";
      authors = [ "The Rust Project Developers" ];
      sha256 = "1fzgp3ayz7g5zx4gvxkxxm9jkrllj5qlvlyp6r2an0wyqm2y9qlh";
      inherit dependencies buildDependencies features;
    };
    vcpkg_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "vcpkg";
      version = "0.2.2";
      authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
      sha256 = "1fl5j0ksnwrnsrf1b1a9lqbjgnajdipq0030vsbhx81mb7d9478a";
      inherit dependencies buildDependencies features;
    };
    version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "version_check";
      version = "0.1.3";
      authors = [ "Sergio Benitez <sb@sergio.bz>" ];
      sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
      inherit dependencies buildDependencies features;
    };
    void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "void";
      version = "1.0.2";
      authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
      sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
      inherit dependencies buildDependencies features;
    };
    winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "winapi";
      version = "0.2.8";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
      inherit dependencies buildDependencies features;
    };
    winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "winapi";
      version = "0.3.4";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "winapi-build";
      version = "0.1.1";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
      libName = "build";
      inherit dependencies buildDependencies features;
    };
    winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };
    winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
      crateName = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      authors = [ "Peter Atashian <retep998@gmail.com>" ];
      sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
      build = "build.rs";
      inherit dependencies buildDependencies features;
    };

in
rec {
  aho_corasick_0_5_3 = aho_corasick_0_5_3_ rec {
    dependencies = [ memchr_0_1_11 ];
  };
  memchr_0_1_11_features."default".from_aho_corasick_0_5_3__default = true;
  aho_corasick_0_6_4 = aho_corasick_0_6_4_ rec {
    dependencies = [ memchr_2_0_1 ];
  };
  memchr_2_0_1_features."default".from_aho_corasick_0_6_4__default = true;
  amq_proto_0_1_0 = amq_proto_0_1_0_ rec {
    dependencies = [ bit_vec_0_4_4 byteorder_0_5_3 enum_primitive_0_1_1 env_logger_0_3_5 error_chain_0_10_0 log_0_3_8 ];
  };
  bit_vec_0_4_4_features."default".from_amq_proto_0_1_0__default = true;
  byteorder_0_5_3_features."default".from_amq_proto_0_1_0__default = true;
  enum_primitive_0_1_1_features."default".from_amq_proto_0_1_0__default = true;
  env_logger_0_3_5_features."default".from_amq_proto_0_1_0__default = true;
  error_chain_0_10_0_features."default".from_amq_proto_0_1_0__default = true;
  log_0_3_8_features."default".from_amq_proto_0_1_0__default = true;
  amqp_0_1_0 = amqp_0_1_0_ rec {
    dependencies = [ amq_proto_0_1_0 env_logger_0_3_5 log_0_3_8 openssl_0_9_23 time_0_1_39 url_1_6_0 ]
      ++ (if lib.lists.any (x: x == "openssl") features then [openssl_0_9_23] else []);
    features = mkFeatures amqp_0_1_0_features;
  };
  amqp_0_1_0_features."".self = true;
  amqp_0_1_0_features."tls".self_default = hasDefault amqp_0_1_0_features;
  amqp_0_1_0_features."openssl".self_tls = hasFeature (amqp_0_1_0_features."tls" or {});
  amq_proto_0_1_0_features."default".from_amqp_0_1_0__default = true;
  env_logger_0_3_5_features."default".from_amqp_0_1_0__default = true;
  log_0_3_8_features."default".from_amqp_0_1_0__default = true;
  openssl_0_9_23_features."default".from_amqp_0_1_0__default = true;
  time_0_1_39_features."default".from_amqp_0_1_0__default = true;
  url_1_6_0_features."default".from_amqp_0_1_0__default = true;
  antidote_1_0_0 = antidote_1_0_0_ rec {};
  backtrace_0_3_5 = backtrace_0_3_5_ rec {
    dependencies = [ cfg_if_0_1_2 rustc_demangle_0_1_5 ]
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then [ backtrace_sys_0_1_16 ]
      ++ (if lib.lists.any (x: x == "backtrace-sys") features then [backtrace_sys_0_1_16] else []) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then [ libc_0_2_36 ] else [])
      ++ (if kernel == "windows" then [ winapi_0_3_4 ]
      ++ (if lib.lists.any (x: x == "winapi") features then [winapi_0_3_4] else []) else []);
    features = mkFeatures backtrace_0_3_5_features;
  };
  backtrace_0_3_5_features."".self = true;
  backtrace_0_3_5_features."winapi".self_dbghelp = hasFeature (backtrace_0_3_5_features."dbghelp" or {});
  backtrace_0_3_5_features."libunwind".self_default = hasDefault backtrace_0_3_5_features;
  backtrace_0_3_5_features."libbacktrace".self_default = hasDefault backtrace_0_3_5_features;
  backtrace_0_3_5_features."coresymbolication".self_default = hasDefault backtrace_0_3_5_features;
  backtrace_0_3_5_features."dladdr".self_default = hasDefault backtrace_0_3_5_features;
  backtrace_0_3_5_features."dbghelp".self_default = hasDefault backtrace_0_3_5_features;
  backtrace_0_3_5_features."addr2line".self_gimli-symbolize = hasFeature (backtrace_0_3_5_features."gimli-symbolize" or {});
  backtrace_0_3_5_features."findshlibs".self_gimli-symbolize = hasFeature (backtrace_0_3_5_features."gimli-symbolize" or {});
  backtrace_0_3_5_features."backtrace-sys".self_libbacktrace = hasFeature (backtrace_0_3_5_features."libbacktrace" or {});
  backtrace_0_3_5_features."rustc-serialize".self_serialize-rustc = hasFeature (backtrace_0_3_5_features."serialize-rustc" or {});
  backtrace_0_3_5_features."serde".self_serialize-serde = hasFeature (backtrace_0_3_5_features."serialize-serde" or {});
  backtrace_0_3_5_features."serde_derive".self_serialize-serde = hasFeature (backtrace_0_3_5_features."serialize-serde" or {});
  addr2line_0_0_0_features."default".from_backtrace_0_3_5__default = true;
  cfg_if_0_1_2_features."default".from_backtrace_0_3_5__default = true;
  cpp_demangle_0_0_0_features."default".from_backtrace_0_3_5__default = false;
  findshlibs_0_0_0_features."default".from_backtrace_0_3_5__default = true;
  rustc_demangle_0_1_5_features."default".from_backtrace_0_3_5__default = true;
  rustc_serialize_0_0_0_features."default".from_backtrace_0_3_5__default = true;
  serde_0_0_0_features."default".from_backtrace_0_3_5__default = true;
  serde_derive_0_0_0_features."default".from_backtrace_0_3_5__default = true;
  backtrace_sys_0_1_16_features."default".from_backtrace_0_3_5__default = true;
  libc_0_2_36_features."default".from_backtrace_0_3_5__default = true;
  winapi_0_3_4_features."std".from_backtrace_0_3_5 = true;
  winapi_0_3_4_features."dbghelp".from_backtrace_0_3_5 = true;
  winapi_0_3_4_features."processthreadsapi".from_backtrace_0_3_5 = true;
  winapi_0_3_4_features."winnt".from_backtrace_0_3_5 = true;
  winapi_0_3_4_features."minwindef".from_backtrace_0_3_5 = true;
  winapi_0_3_4_features."default".from_backtrace_0_3_5__default = true;
  backtrace_sys_0_1_16 = backtrace_sys_0_1_16_ rec {
    dependencies = [ libc_0_2_36 ];
    buildDependencies = [ cc_1_0_4 ];
  };
  libc_0_2_36_features."default".from_backtrace_sys_0_1_16__default = true;
  base64_0_6_0 = base64_0_6_0_ rec {
    dependencies = [ byteorder_1_2_1 safemem_0_2_0 ];
  };
  byteorder_1_2_1_features."default".from_base64_0_6_0__default = true;
  safemem_0_2_0_features."default".from_base64_0_6_0__default = true;
  bit_vec_0_4_4 = bit_vec_0_4_4_ rec {
    features = mkFeatures bit_vec_0_4_4_features;
  };
  bit_vec_0_4_4_features."".self = true;
  bitflags_0_9_1 = bitflags_0_9_1_ rec {
    features = mkFeatures bitflags_0_9_1_features;
  };
  bitflags_0_9_1_features."example_generated".self_default = hasDefault bitflags_0_9_1_features;
  bitflags_1_0_1 = bitflags_1_0_1_ rec {
    features = mkFeatures bitflags_1_0_1_features;
  };
  bitflags_1_0_1_features."example_generated".self_default = hasDefault bitflags_1_0_1_features;
  byteorder_0_5_3 = byteorder_0_5_3_ rec {
    features = mkFeatures byteorder_0_5_3_features;
  };
  byteorder_0_5_3_features."std".self_default = hasDefault byteorder_0_5_3_features;
  byteorder_1_2_1 = byteorder_1_2_1_ rec {
    features = mkFeatures byteorder_1_2_1_features;
  };
  byteorder_1_2_1_features."std".self_default = hasDefault byteorder_1_2_1_features;
  cc_1_0_4 = cc_1_0_4_ rec {
    dependencies = [];
    features = mkFeatures cc_1_0_4_features;
  };
  cc_1_0_4_features."rayon".self_parallel = hasFeature (cc_1_0_4_features."parallel" or {});
  rayon_0_0_0_features."default".from_cc_1_0_4__default = true;
  cfg_if_0_1_2 = cfg_if_0_1_2_ rec {};
  core_foundation_0_2_3 = core_foundation_0_2_3_ rec {
    dependencies = [ core_foundation_sys_0_2_3 libc_0_2_36 ];
  };
  core_foundation_sys_0_2_3_features."default".from_core_foundation_0_2_3__default = true;
  libc_0_2_36_features."default".from_core_foundation_0_2_3__default = true;
  core_foundation_sys_0_2_3 = core_foundation_sys_0_2_3_ rec {
    dependencies = [ libc_0_2_36 ];
  };
  libc_0_2_36_features."default".from_core_foundation_sys_0_2_3__default = true;
  dtoa_0_4_2 = dtoa_0_4_2_ rec {};
  enum_primitive_0_1_1 = enum_primitive_0_1_1_ rec {
    dependencies = [ num_traits_0_1_41 ];
  };
  num_traits_0_1_41_features."default".from_enum_primitive_0_1_1__default = false;
  env_logger_0_3_5 = env_logger_0_3_5_ rec {
    dependencies = [ log_0_3_8 regex_0_1_80 ]
      ++ (if lib.lists.any (x: x == "regex") features then [regex_0_1_80] else []);
    features = mkFeatures env_logger_0_3_5_features;
  };
  env_logger_0_3_5_features."".self = true;
  env_logger_0_3_5_features."regex".self_default = hasDefault env_logger_0_3_5_features;
  log_0_3_8_features."default".from_env_logger_0_3_5__default = true;
  regex_0_1_80_features."default".from_env_logger_0_3_5__default = true;
  env_logger_0_4_3 = env_logger_0_4_3_ rec {
    dependencies = [ log_0_3_8 regex_0_2_5 ]
      ++ (if lib.lists.any (x: x == "regex") features then [regex_0_2_5] else []);
    features = mkFeatures env_logger_0_4_3_features;
  };
  env_logger_0_4_3_features."".self = true;
  env_logger_0_4_3_features."regex".self_default = hasDefault env_logger_0_4_3_features;
  log_0_3_8_features."default".from_env_logger_0_4_3__default = true;
  regex_0_2_5_features."default".from_env_logger_0_4_3__default = true;
  error_chain_0_10_0 = error_chain_0_10_0_ rec {
    dependencies = [ backtrace_0_3_5 ]
      ++ (if lib.lists.any (x: x == "backtrace") features then [backtrace_0_3_5] else []);
    features = mkFeatures error_chain_0_10_0_features;
  };
  error_chain_0_10_0_features."".self = true;
  error_chain_0_10_0_features."backtrace".self_default = hasDefault error_chain_0_10_0_features;
  error_chain_0_10_0_features."example_generated".self_default = hasDefault error_chain_0_10_0_features;
  backtrace_0_3_5_features."default".from_error_chain_0_10_0__default = true;
  foreign_types_0_3_2 = foreign_types_0_3_2_ rec {
    dependencies = [ foreign_types_shared_0_1_1 ];
  };
  foreign_types_shared_0_1_1_features."default".from_foreign_types_0_3_2__default = true;
  foreign_types_shared_0_1_1 = foreign_types_shared_0_1_1_ rec {};
  fs2_0_4_3 = fs2_0_4_3_ rec {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then [ libc_0_2_36 ] else [])
      ++ (if kernel == "windows" then [ winapi_0_3_4 ] else []);
  };
  libc_0_2_36_features."default".from_fs2_0_4_3__default = true;
  winapi_0_3_4_features."handleapi".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."processthreadsapi".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."winerror".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."fileapi".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."winbase".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."std".from_fs2_0_4_3 = true;
  winapi_0_3_4_features."default".from_fs2_0_4_3__default = true;
  fuchsia_zircon_0_3_3 = fuchsia_zircon_0_3_3_ rec {
    dependencies = [ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ];
  };
  bitflags_1_0_1_features."default".from_fuchsia_zircon_0_3_3__default = true;
  fuchsia_zircon_sys_0_3_3_features."default".from_fuchsia_zircon_0_3_3__default = true;
  fuchsia_zircon_sys_0_3_3 = fuchsia_zircon_sys_0_3_3_ rec {};
  httparse_1_2_4 = httparse_1_2_4_ rec {
    features = mkFeatures httparse_1_2_4_features;
  };
  httparse_1_2_4_features."std".self_default = hasDefault httparse_1_2_4_features;
  hubcaps_0_3_16 = hubcaps_0_3_16_ rec {
    dependencies = [ error_chain_0_10_0 hyper_0_10_13 log_0_3_8 serde_1_0_27 serde_derive_1_0_27 serde_json_1_0_9 url_1_6_0 ];
  };
  error_chain_0_10_0_features."default".from_hubcaps_0_3_16__default = true;
  hyper_0_10_13_features."default".from_hubcaps_0_3_16__default = true;
  log_0_3_8_features."default".from_hubcaps_0_3_16__default = true;
  serde_1_0_27_features."default".from_hubcaps_0_3_16__default = true;
  serde_derive_1_0_27_features."default".from_hubcaps_0_3_16__default = true;
  serde_json_1_0_9_features."default".from_hubcaps_0_3_16__default = true;
  url_1_6_0_features."default".from_hubcaps_0_3_16__default = true;
  hyper_0_10_13 = hyper_0_10_13_ rec {
    dependencies = [ base64_0_6_0 httparse_1_2_4 language_tags_0_2_2 log_0_3_8 mime_0_2_6 num_cpus_1_8_0 time_0_1_39 traitobject_0_1_0 typeable_0_1_2 unicase_1_4_2 url_1_6_0 ];
    features = mkFeatures hyper_0_10_13_features;
  };
  hyper_0_10_13_features."".self = true;
  base64_0_6_0_features."default".from_hyper_0_10_13__default = true;
  httparse_1_2_4_features."default".from_hyper_0_10_13__default = true;
  language_tags_0_2_2_features."default".from_hyper_0_10_13__default = true;
  log_0_3_8_features."default".from_hyper_0_10_13__default = true;
  mime_0_2_6_features."default".from_hyper_0_10_13__default = true;
  num_cpus_1_8_0_features."default".from_hyper_0_10_13__default = true;
  time_0_1_39_features."default".from_hyper_0_10_13__default = true;
  traitobject_0_1_0_features."default".from_hyper_0_10_13__default = true;
  typeable_0_1_2_features."default".from_hyper_0_10_13__default = true;
  unicase_1_4_2_features."default".from_hyper_0_10_13__default = true;
  url_1_6_0_features."default".from_hyper_0_10_13__default = true;
  hyper_native_tls_0_2_4 = hyper_native_tls_0_2_4_ rec {
    dependencies = [ antidote_1_0_0 hyper_0_10_13 native_tls_0_1_5 ];
  };
  antidote_1_0_0_features."default".from_hyper_native_tls_0_2_4__default = true;
  hyper_0_10_13_features."default".from_hyper_native_tls_0_2_4__default = true;
  native_tls_0_1_5_features."default".from_hyper_native_tls_0_2_4__default = true;
  idna_0_1_4 = idna_0_1_4_ rec {
    dependencies = [ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_5 ];
  };
  matches_0_1_6_features."default".from_idna_0_1_4__default = true;
  unicode_bidi_0_3_4_features."default".from_idna_0_1_4__default = true;
  unicode_normalization_0_1_5_features."default".from_idna_0_1_4__default = true;
  itoa_0_3_4 = itoa_0_3_4_ rec {
    features = mkFeatures itoa_0_3_4_features;
  };
  itoa_0_3_4_features."".self = true;
  kernel32_sys_0_2_2 = kernel32_sys_0_2_2_ rec {
    dependencies = [ winapi_0_2_8 ];
    buildDependencies = [ winapi_build_0_1_1 ];
  };
  winapi_0_2_8_features."default".from_kernel32_sys_0_2_2__default = true;
  language_tags_0_2_2 = language_tags_0_2_2_ rec {
    dependencies = [];
    features = mkFeatures language_tags_0_2_2_features;
  };
  language_tags_0_2_2_features."heapsize".self_heap_size = hasFeature (language_tags_0_2_2_features."heap_size" or {});
  language_tags_0_2_2_features."heapsize_plugin".self_heap_size = hasFeature (language_tags_0_2_2_features."heap_size" or {});
  heapsize_0_0_0_features."default".from_language_tags_0_2_2__default = true;
  heapsize_plugin_0_0_0_features."default".from_language_tags_0_2_2__default = true;
  lazy_static_0_2_11 = lazy_static_0_2_11_ rec {
    dependencies = [];
    features = mkFeatures lazy_static_0_2_11_features;
  };
  lazy_static_0_2_11_features."compiletest_rs".self_compiletest = hasFeature (lazy_static_0_2_11_features."compiletest" or {});
  lazy_static_0_2_11_features."nightly".self_spin_no_std = hasFeature (lazy_static_0_2_11_features."spin_no_std" or {});
  lazy_static_0_2_11_features."spin".self_spin_no_std = hasFeature (lazy_static_0_2_11_features."spin_no_std" or {});
  compiletest_rs_0_0_0_features."default".from_lazy_static_0_2_11__default = true;
  spin_0_0_0_features."default".from_lazy_static_0_2_11__default = true;
  lazy_static_1_0_0 = lazy_static_1_0_0_ rec {
    dependencies = [];
    features = mkFeatures lazy_static_1_0_0_features;
  };
  lazy_static_1_0_0_features."compiletest_rs".self_compiletest = hasFeature (lazy_static_1_0_0_features."compiletest" or {});
  lazy_static_1_0_0_features."nightly".self_spin_no_std = hasFeature (lazy_static_1_0_0_features."spin_no_std" or {});
  lazy_static_1_0_0_features."spin".self_spin_no_std = hasFeature (lazy_static_1_0_0_features."spin_no_std" or {});
  compiletest_rs_0_0_0_features."default".from_lazy_static_1_0_0__default = true;
  spin_0_0_0_features."default".from_lazy_static_1_0_0__default = true;
  libc_0_2_36 = libc_0_2_36_ rec {
    features = mkFeatures libc_0_2_36_features;
  };
  libc_0_2_36_features."use_std".self_default = hasDefault libc_0_2_36_features;
  linked_hash_map_0_4_2 = linked_hash_map_0_4_2_ rec {
    dependencies = [];
    features = mkFeatures linked_hash_map_0_4_2_features;
  };
  linked_hash_map_0_4_2_features."heapsize".self_heapsize_impl = hasFeature (linked_hash_map_0_4_2_features."heapsize_impl" or {});
  linked_hash_map_0_4_2_features."serde".self_serde_impl = hasFeature (linked_hash_map_0_4_2_features."serde_impl" or {});
  linked_hash_map_0_4_2_features."serde_test".self_serde_impl = hasFeature (linked_hash_map_0_4_2_features."serde_impl" or {});
  clippy_0_0_0_features."default".from_linked_hash_map_0_4_2__default = true;
  heapsize_0_0_0_features."default".from_linked_hash_map_0_4_2__default = true;
  serde_0_0_0_features."default".from_linked_hash_map_0_4_2__default = true;
  serde_test_0_0_0_features."default".from_linked_hash_map_0_4_2__default = true;
  log_0_3_8 = log_0_3_8_ rec {
    features = mkFeatures log_0_3_8_features;
  };
  log_0_3_8_features."use_std".self_default = hasDefault log_0_3_8_features;
  lru_cache_0_1_1 = lru_cache_0_1_1_ rec {
    dependencies = [ linked_hash_map_0_4_2 ];
    features = mkFeatures lru_cache_0_1_1_features;
  };
  lru_cache_0_1_1_features."heapsize".self_heapsize_impl = hasFeature (lru_cache_0_1_1_features."heapsize_impl" or {});
  heapsize_0_0_0_features."default".from_lru_cache_0_1_1__default = true;
  linked_hash_map_0_4_2_features."heapsize_impl".from_lru_cache_0_1_1__heapsize_impl = hasFeature (lru_cache_0_1_1_features."heapsize_impl" or {});
  linked_hash_map_0_4_2_features."default".from_lru_cache_0_1_1__default = true;
  matches_0_1_6 = matches_0_1_6_ rec {};
  md5_0_3_6 = md5_0_3_6_ rec {};
  memchr_0_1_11 = memchr_0_1_11_ rec {
    dependencies = [ libc_0_2_36 ];
  };
  libc_0_2_36_features."default".from_memchr_0_1_11__default = true;
  memchr_2_0_1 = memchr_2_0_1_ rec {
    dependencies = [ libc_0_2_36 ]
      ++ (if lib.lists.any (x: x == "libc") features then [libc_0_2_36] else []);
    features = mkFeatures memchr_2_0_1_features;
  };
  memchr_2_0_1_features."".self = true;
  memchr_2_0_1_features."use_std".self_default = hasDefault memchr_2_0_1_features;
  memchr_2_0_1_features."libc".self_default = hasDefault memchr_2_0_1_features;
  memchr_2_0_1_features."libc".self_use_std = hasFeature (memchr_2_0_1_features."use_std" or {});
  libc_0_2_36_features."use_std".from_memchr_2_0_1__use_std = hasFeature (memchr_2_0_1_features."use_std" or {});
  libc_0_2_36_features."default".from_memchr_2_0_1__default = false;
  mime_0_2_6 = mime_0_2_6_ rec {
    dependencies = [ log_0_3_8 ];
    features = mkFeatures mime_0_2_6_features;
  };
  mime_0_2_6_features."heapsize".self_heap_size = hasFeature (mime_0_2_6_features."heap_size" or {});
  heapsize_0_0_0_features."default".from_mime_0_2_6__default = true;
  log_0_3_8_features."default".from_mime_0_2_6__default = true;
  serde_0_0_0_features."default".from_mime_0_2_6__default = true;
  native_tls_0_1_5 = native_tls_0_1_5_ rec {
    dependencies = [ lazy_static_0_2_11 ]
      ++ (if kernel == "darwin" || kernel == "ios" then [ libc_0_2_36 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_5 ] else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then [ openssl_0_9_23 ] else [])
      ++ (if kernel == "windows" then [ schannel_0_1_10 ] else []);
  };
  lazy_static_0_2_11_features."default".from_native_tls_0_1_5__default = true;
  libc_0_2_36_features."default".from_native_tls_0_1_5__default = true;
  security_framework_0_1_16_features."OSX_10_8".from_native_tls_0_1_5 = true;
  security_framework_0_1_16_features."default".from_native_tls_0_1_5__default = true;
  security_framework_sys_0_1_16_features."default".from_native_tls_0_1_5__default = true;
  tempdir_0_3_5_features."default".from_native_tls_0_1_5__default = true;
  openssl_0_9_23_features."default".from_native_tls_0_1_5__default = true;
  schannel_0_1_10_features."default".from_native_tls_0_1_5__default = true;
  num_traits_0_1_41 = num_traits_0_1_41_ rec {};
  num_cpus_1_8_0 = num_cpus_1_8_0_ rec {
    dependencies = [ libc_0_2_36 ];
  };
  libc_0_2_36_features."default".from_num_cpus_1_8_0__default = true;
  ofborg_0_1_0 = ofborg_0_1_0_ rec {
    dependencies = [ amqp_0_1_0 env_logger_0_4_3 fs2_0_4_3 hubcaps_0_3_16 hyper_0_10_13 hyper_native_tls_0_2_4 log_0_3_8 lru_cache_0_1_1 md5_0_3_6 serde_1_0_27 serde_derive_1_0_27 serde_json_1_0_9 tempfile_2_2_0 uuid_0_4_0 ];
  };
  amqp_0_1_0_features."default".from_ofborg_0_1_0__default = true;
  env_logger_0_4_3_features."default".from_ofborg_0_1_0__default = true;
  fs2_0_4_3_features."default".from_ofborg_0_1_0__default = true;
  hubcaps_0_3_16_features."default".from_ofborg_0_1_0__default = true;
  hyper_0_10_13_features."default".from_ofborg_0_1_0__default = true;
  hyper_native_tls_0_2_4_features."default".from_ofborg_0_1_0__default = true;
  log_0_3_8_features."default".from_ofborg_0_1_0__default = true;
  lru_cache_0_1_1_features."default".from_ofborg_0_1_0__default = true;
  md5_0_3_6_features."default".from_ofborg_0_1_0__default = true;
  serde_1_0_27_features."default".from_ofborg_0_1_0__default = true;
  serde_derive_1_0_27_features."default".from_ofborg_0_1_0__default = true;
  serde_json_1_0_9_features."default".from_ofborg_0_1_0__default = true;
  tempfile_2_2_0_features."default".from_ofborg_0_1_0__default = true;
  uuid_0_4_0_features."v4".from_ofborg_0_1_0 = true;
  uuid_0_4_0_features."default".from_ofborg_0_1_0__default = true;
  openssl_0_9_23 = openssl_0_9_23_ rec {
    dependencies = [ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_0_0 libc_0_2_36 openssl_sys_0_9_24 ];
    features = mkFeatures openssl_0_9_23_features;
  };
  openssl_0_9_23_features."".self = true;
  bitflags_0_9_1_features."default".from_openssl_0_9_23__default = true;
  foreign_types_0_3_2_features."default".from_openssl_0_9_23__default = true;
  lazy_static_1_0_0_features."default".from_openssl_0_9_23__default = true;
  libc_0_2_36_features."default".from_openssl_0_9_23__default = true;
  openssl_sys_0_9_24_features."default".from_openssl_0_9_23__default = true;
  openssl_sys_0_9_24 = openssl_sys_0_9_24_ rec {
    dependencies = [ libc_0_2_36 ]
      ++ (if abi == "msvc" then [] else []);
    buildDependencies = [ cc_1_0_4 pkg_config_0_3_9 ];
  };
  libc_0_2_36_features."default".from_openssl_sys_0_9_24__default = true;
  percent_encoding_1_0_1 = percent_encoding_1_0_1_ rec {};
  pkg_config_0_3_9 = pkg_config_0_3_9_ rec {};
  quote_0_3_15 = quote_0_3_15_ rec {};
  rand_0_3_20 = rand_0_3_20_ rec {
    dependencies = [ libc_0_2_36 ]
      ++ (if kernel == "fuchsia" then [ fuchsia_zircon_0_3_3 ] else []);
    features = mkFeatures rand_0_3_20_features;
  };
  rand_0_3_20_features."i128_support".self_nightly = hasFeature (rand_0_3_20_features."nightly" or {});
  libc_0_2_36_features."default".from_rand_0_3_20__default = true;
  fuchsia_zircon_0_3_3_features."default".from_rand_0_3_20__default = true;
  redox_syscall_0_1_37 = redox_syscall_0_1_37_ rec {};
  regex_0_1_80 = regex_0_1_80_ rec {
    dependencies = [ aho_corasick_0_5_3 memchr_0_1_11 regex_syntax_0_3_9 thread_local_0_2_7 utf8_ranges_0_1_3 ];
    features = mkFeatures regex_0_1_80_features;
  };
  regex_0_1_80_features."simd".self_simd-accel = hasFeature (regex_0_1_80_features."simd-accel" or {});
  aho_corasick_0_5_3_features."default".from_regex_0_1_80__default = true;
  memchr_0_1_11_features."default".from_regex_0_1_80__default = true;
  regex_syntax_0_3_9_features."default".from_regex_0_1_80__default = true;
  simd_0_0_0_features."default".from_regex_0_1_80__default = true;
  thread_local_0_2_7_features."default".from_regex_0_1_80__default = true;
  utf8_ranges_0_1_3_features."default".from_regex_0_1_80__default = true;
  regex_0_2_5 = regex_0_2_5_ rec {
    dependencies = [ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_4_2 thread_local_0_3_5 utf8_ranges_1_0_0 ];
    features = mkFeatures regex_0_2_5_features;
  };
  regex_0_2_5_features."simd".self_simd-accel = hasFeature (regex_0_2_5_features."simd-accel" or {});
  aho_corasick_0_6_4_features."default".from_regex_0_2_5__default = true;
  memchr_2_0_1_features."default".from_regex_0_2_5__default = true;
  regex_syntax_0_4_2_features."default".from_regex_0_2_5__default = true;
  simd_0_0_0_features."default".from_regex_0_2_5__default = true;
  thread_local_0_3_5_features."default".from_regex_0_2_5__default = true;
  utf8_ranges_1_0_0_features."default".from_regex_0_2_5__default = true;
  regex_syntax_0_3_9 = regex_syntax_0_3_9_ rec {};
  regex_syntax_0_4_2 = regex_syntax_0_4_2_ rec {};
  rustc_demangle_0_1_5 = rustc_demangle_0_1_5_ rec {};
  safemem_0_2_0 = safemem_0_2_0_ rec {};
  schannel_0_1_10 = schannel_0_1_10_ rec {
    dependencies = [ lazy_static_1_0_0 winapi_0_3_4 ];
  };
  lazy_static_1_0_0_features."default".from_schannel_0_1_10__default = true;
  winapi_0_3_4_features."lmcons".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."minschannel".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."securitybaseapi".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."schannel".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."sysinfoapi".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."timezoneapi".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."winbase".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."wincrypt".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."winerror".from_schannel_0_1_10 = true;
  winapi_0_3_4_features."default".from_schannel_0_1_10__default = true;
  security_framework_0_1_16 = security_framework_0_1_16_ rec {
    dependencies = [ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_36 security_framework_sys_0_1_16 ];
    features = mkFeatures security_framework_0_1_16_features;
  };
  security_framework_0_1_16_features."OSX_10_9".self_OSX_10_10 = hasFeature (security_framework_0_1_16_features."OSX_10_10" or {});
  security_framework_0_1_16_features."OSX_10_10".self_OSX_10_11 = hasFeature (security_framework_0_1_16_features."OSX_10_11" or {});
  security_framework_0_1_16_features."OSX_10_11".self_OSX_10_12 = hasFeature (security_framework_0_1_16_features."OSX_10_12" or {});
  security_framework_0_1_16_features."OSX_10_8".self_OSX_10_9 = hasFeature (security_framework_0_1_16_features."OSX_10_9" or {});
  core_foundation_0_2_3_features."default".from_security_framework_0_1_16__default = true;
  core_foundation_sys_0_2_3_features."default".from_security_framework_0_1_16__default = true;
  libc_0_2_36_features."default".from_security_framework_0_1_16__default = true;
  security_framework_sys_0_1_16_features."OSX_10_10".from_security_framework_0_1_16__OSX_10_10 = hasFeature (security_framework_0_1_16_features."OSX_10_10" or {});
  security_framework_sys_0_1_16_features."OSX_10_11".from_security_framework_0_1_16__OSX_10_11 = hasFeature (security_framework_0_1_16_features."OSX_10_11" or {});
  security_framework_sys_0_1_16_features."OSX_10_11".from_security_framework_0_1_16__OSX_10_12 = hasFeature (security_framework_0_1_16_features."OSX_10_12" or {});
  security_framework_sys_0_1_16_features."OSX_10_8".from_security_framework_0_1_16__OSX_10_8 = hasFeature (security_framework_0_1_16_features."OSX_10_8" or {});
  security_framework_sys_0_1_16_features."OSX_10_9".from_security_framework_0_1_16__OSX_10_9 = hasFeature (security_framework_0_1_16_features."OSX_10_9" or {});
  security_framework_sys_0_1_16_features."default".from_security_framework_0_1_16__default = true;
  security_framework_sys_0_1_16 = security_framework_sys_0_1_16_ rec {
    dependencies = [ core_foundation_sys_0_2_3 libc_0_2_36 ];
    features = mkFeatures security_framework_sys_0_1_16_features;
  };
  security_framework_sys_0_1_16_features."OSX_10_9".self_OSX_10_10 = hasFeature (security_framework_sys_0_1_16_features."OSX_10_10" or {});
  security_framework_sys_0_1_16_features."OSX_10_10".self_OSX_10_11 = hasFeature (security_framework_sys_0_1_16_features."OSX_10_11" or {});
  security_framework_sys_0_1_16_features."OSX_10_11".self_OSX_10_12 = hasFeature (security_framework_sys_0_1_16_features."OSX_10_12" or {});
  security_framework_sys_0_1_16_features."OSX_10_8".self_OSX_10_9 = hasFeature (security_framework_sys_0_1_16_features."OSX_10_9" or {});
  core_foundation_sys_0_2_3_features."default".from_security_framework_sys_0_1_16__default = true;
  libc_0_2_36_features."default".from_security_framework_sys_0_1_16__default = true;
  serde_1_0_27 = serde_1_0_27_ rec {
    dependencies = [];
    features = mkFeatures serde_1_0_27_features;
  };
  serde_1_0_27_features."unstable".self_alloc = hasFeature (serde_1_0_27_features."alloc" or {});
  serde_1_0_27_features."std".self_default = hasDefault serde_1_0_27_features;
  serde_1_0_27_features."serde_derive".self_derive = hasFeature (serde_1_0_27_features."derive" or {});
  serde_1_0_27_features."serde_derive".self_playground = hasFeature (serde_1_0_27_features."playground" or {});
  serde_derive_0_0_0_features."default".from_serde_1_0_27__default = true;
  serde_derive_1_0_27 = serde_derive_1_0_27_ rec {
    dependencies = [ quote_0_3_15 serde_derive_internals_0_19_0 syn_0_11_11 ];
    features = mkFeatures serde_derive_1_0_27_features;
  };
  serde_derive_1_0_27_features."".self = true;
  quote_0_3_15_features."default".from_serde_derive_1_0_27__default = true;
  serde_derive_internals_0_19_0_features."default".from_serde_derive_1_0_27__default = false;
  syn_0_11_11_features."visit".from_serde_derive_1_0_27 = true;
  syn_0_11_11_features."default".from_serde_derive_1_0_27__default = true;
  serde_derive_internals_0_19_0 = serde_derive_internals_0_19_0_ rec {
    dependencies = [ syn_0_11_11 synom_0_11_3 ];
  };
  syn_0_11_11_features."parsing".from_serde_derive_internals_0_19_0 = true;
  syn_0_11_11_features."default".from_serde_derive_internals_0_19_0__default = false;
  synom_0_11_3_features."default".from_serde_derive_internals_0_19_0__default = true;
  serde_json_1_0_9 = serde_json_1_0_9_ rec {
    dependencies = [ dtoa_0_4_2 itoa_0_3_4 num_traits_0_1_41 serde_1_0_27 ];
    features = mkFeatures serde_json_1_0_9_features;
  };
  serde_json_1_0_9_features."linked-hash-map".self_preserve_order = hasFeature (serde_json_1_0_9_features."preserve_order" or {});
  dtoa_0_4_2_features."default".from_serde_json_1_0_9__default = true;
  itoa_0_3_4_features."default".from_serde_json_1_0_9__default = true;
  linked_hash_map_0_0_0_features."default".from_serde_json_1_0_9__default = true;
  num_traits_0_1_41_features."default".from_serde_json_1_0_9__default = true;
  serde_1_0_27_features."default".from_serde_json_1_0_9__default = true;
  syn_0_11_11 = syn_0_11_11_ rec {
    dependencies = [ quote_0_3_15 synom_0_11_3 unicode_xid_0_0_4 ]
      ++ (if lib.lists.any (x: x == "quote") features then [quote_0_3_15] else [])      ++ (if lib.lists.any (x: x == "synom") features then [synom_0_11_3] else [])      ++ (if lib.lists.any (x: x == "unicode-xid") features then [unicode_xid_0_0_4] else []);
    features = mkFeatures syn_0_11_11_features;
  };
  syn_0_11_11_features."".self = true;
  syn_0_11_11_features."parsing".self_default = hasDefault syn_0_11_11_features;
  syn_0_11_11_features."printing".self_default = hasDefault syn_0_11_11_features;
  syn_0_11_11_features."unicode-xid".self_parsing = hasFeature (syn_0_11_11_features."parsing" or {});
  syn_0_11_11_features."synom".self_parsing = hasFeature (syn_0_11_11_features."parsing" or {});
  syn_0_11_11_features."quote".self_printing = hasFeature (syn_0_11_11_features."printing" or {});
  quote_0_3_15_features."default".from_syn_0_11_11__default = true;
  synom_0_11_3_features."default".from_syn_0_11_11__default = true;
  unicode_xid_0_0_4_features."default".from_syn_0_11_11__default = true;
  synom_0_11_3 = synom_0_11_3_ rec {
    dependencies = [ unicode_xid_0_0_4 ];
  };
  unicode_xid_0_0_4_features."default".from_synom_0_11_3__default = true;
  tempdir_0_3_5 = tempdir_0_3_5_ rec {
    dependencies = [ rand_0_3_20 ];
  };
  rand_0_3_20_features."default".from_tempdir_0_3_5__default = true;
  tempfile_2_2_0 = tempfile_2_2_0_ rec {
    dependencies = [ rand_0_3_20 ]
      ++ (if kernel == "redox" then [ redox_syscall_0_1_37 ] else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then [ libc_0_2_36 ] else [])
      ++ (if kernel == "windows" then [ kernel32_sys_0_2_2 winapi_0_2_8 ] else []);
  };
  rand_0_3_20_features."default".from_tempfile_2_2_0__default = true;
  redox_syscall_0_1_37_features."default".from_tempfile_2_2_0__default = true;
  libc_0_2_36_features."default".from_tempfile_2_2_0__default = true;
  kernel32_sys_0_2_2_features."default".from_tempfile_2_2_0__default = true;
  winapi_0_2_8_features."default".from_tempfile_2_2_0__default = true;
  thread_id_2_0_0 = thread_id_2_0_0_ rec {
    dependencies = [ kernel32_sys_0_2_2 libc_0_2_36 ];
  };
  kernel32_sys_0_2_2_features."default".from_thread_id_2_0_0__default = true;
  libc_0_2_36_features."default".from_thread_id_2_0_0__default = true;
  thread_local_0_2_7 = thread_local_0_2_7_ rec {
    dependencies = [ thread_id_2_0_0 ];
  };
  thread_id_2_0_0_features."default".from_thread_local_0_2_7__default = true;
  thread_local_0_3_5 = thread_local_0_3_5_ rec {
    dependencies = [ lazy_static_1_0_0 unreachable_1_0_0 ];
  };
  lazy_static_1_0_0_features."default".from_thread_local_0_3_5__default = true;
  unreachable_1_0_0_features."default".from_thread_local_0_3_5__default = true;
  time_0_1_39 = time_0_1_39_ rec {
    dependencies = [ libc_0_2_36 ]
      ++ (if kernel == "redox" then [ redox_syscall_0_1_37 ] else [])
      ++ (if kernel == "windows" then [ winapi_0_3_4 ] else []);
  };
  libc_0_2_36_features."default".from_time_0_1_39__default = true;
  rustc_serialize_0_0_0_features."default".from_time_0_1_39__default = true;
  redox_syscall_0_1_37_features."default".from_time_0_1_39__default = true;
  winapi_0_3_4_features."std".from_time_0_1_39 = true;
  winapi_0_3_4_features."minwinbase".from_time_0_1_39 = true;
  winapi_0_3_4_features."minwindef".from_time_0_1_39 = true;
  winapi_0_3_4_features."ntdef".from_time_0_1_39 = true;
  winapi_0_3_4_features."profileapi".from_time_0_1_39 = true;
  winapi_0_3_4_features."sysinfoapi".from_time_0_1_39 = true;
  winapi_0_3_4_features."timezoneapi".from_time_0_1_39 = true;
  winapi_0_3_4_features."default".from_time_0_1_39__default = true;
  traitobject_0_1_0 = traitobject_0_1_0_ rec {};
  typeable_0_1_2 = typeable_0_1_2_ rec {};
  unicase_1_4_2 = unicase_1_4_2_ rec {
    dependencies = [];
    buildDependencies = [ version_check_0_1_3 ];
    features = mkFeatures unicase_1_4_2_features;
  };
  unicase_1_4_2_features."heapsize".self_heap_size = hasFeature (unicase_1_4_2_features."heap_size" or {});
  unicase_1_4_2_features."heapsize_plugin".self_heap_size = hasFeature (unicase_1_4_2_features."heap_size" or {});
  heapsize_0_0_0_features."default".from_unicase_1_4_2__default = true;
  heapsize_plugin_0_0_0_features."default".from_unicase_1_4_2__default = true;
  unicode_bidi_0_3_4 = unicode_bidi_0_3_4_ rec {
    dependencies = [ matches_0_1_6 ];
    features = mkFeatures unicode_bidi_0_3_4_features;
  };
  unicode_bidi_0_3_4_features."flame".self_flame_it = hasFeature (unicode_bidi_0_3_4_features."flame_it" or {});
  unicode_bidi_0_3_4_features."flamer".self_flame_it = hasFeature (unicode_bidi_0_3_4_features."flame_it" or {});
  unicode_bidi_0_3_4_features."serde".self_with_serde = hasFeature (unicode_bidi_0_3_4_features."with_serde" or {});
  flame_0_0_0_features."default".from_unicode_bidi_0_3_4__default = true;
  flamer_0_0_0_features."default".from_unicode_bidi_0_3_4__default = true;
  matches_0_1_6_features."default".from_unicode_bidi_0_3_4__default = true;
  serde_0_0_0_features."derive".from_unicode_bidi_0_3_4 = true;
  serde_0_0_0_features."default".from_unicode_bidi_0_3_4__default = true;
  unicode_normalization_0_1_5 = unicode_normalization_0_1_5_ rec {};
  unicode_xid_0_0_4 = unicode_xid_0_0_4_ rec {
    features = mkFeatures unicode_xid_0_0_4_features;
  };
  unicode_xid_0_0_4_features."".self = true;
  unreachable_1_0_0 = unreachable_1_0_0_ rec {
    dependencies = [ void_1_0_2 ];
  };
  void_1_0_2_features."default".from_unreachable_1_0_0__default = false;
  url_1_6_0 = url_1_6_0_ rec {
    dependencies = [ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ];
    features = mkFeatures url_1_6_0_features;
  };
  url_1_6_0_features."heapsize".self_heap_size = hasFeature (url_1_6_0_features."heap_size" or {});
  url_1_6_0_features."encoding".self_query_encoding = hasFeature (url_1_6_0_features."query_encoding" or {});
  encoding_0_0_0_features."default".from_url_1_6_0__default = true;
  heapsize_0_0_0_features."default".from_url_1_6_0__default = true;
  idna_0_1_4_features."default".from_url_1_6_0__default = true;
  matches_0_1_6_features."default".from_url_1_6_0__default = true;
  percent_encoding_1_0_1_features."default".from_url_1_6_0__default = true;
  rustc_serialize_0_0_0_features."default".from_url_1_6_0__default = true;
  serde_0_0_0_features."default".from_url_1_6_0__default = true;
  utf8_ranges_0_1_3 = utf8_ranges_0_1_3_ rec {};
  utf8_ranges_1_0_0 = utf8_ranges_1_0_0_ rec {};
  uuid_0_4_0 = uuid_0_4_0_ rec {
    dependencies = [ rand_0_3_20 ]
      ++ (if lib.lists.any (x: x == "rand") features then [rand_0_3_20] else []);
    features = mkFeatures uuid_0_4_0_features;
  };
  uuid_0_4_0_features."".self = true;
  uuid_0_4_0_features."rand".self_v4 = hasFeature (uuid_0_4_0_features."v4" or {});
  uuid_0_4_0_features."sha1".self_v5 = hasFeature (uuid_0_4_0_features."v5" or {});
  rand_0_3_20_features."default".from_uuid_0_4_0__default = true;
  rustc_serialize_0_0_0_features."default".from_uuid_0_4_0__default = true;
  serde_0_0_0_features."default".from_uuid_0_4_0__default = true;
  sha1_0_0_0_features."default".from_uuid_0_4_0__default = true;
  vcpkg_0_2_2 = vcpkg_0_2_2_ rec {};
  version_check_0_1_3 = version_check_0_1_3_ rec {};
  void_1_0_2 = void_1_0_2_ rec {
    features = mkFeatures void_1_0_2_features;
  };
  void_1_0_2_features."std".self_default = hasDefault void_1_0_2_features;
  winapi_0_2_8 = winapi_0_2_8_ rec {};
  winapi_0_3_4 = winapi_0_3_4_ rec {
    dependencies = (if kernel == "i686-pc-windows-gnu" then [ winapi_i686_pc_windows_gnu_0_4_0 ] else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then [ winapi_x86_64_pc_windows_gnu_0_4_0 ] else []);
    features = mkFeatures winapi_0_3_4_features;
  };
  winapi_0_3_4_features."".self = true;
  winapi_i686_pc_windows_gnu_0_4_0_features."default".from_winapi_0_3_4__default = true;
  winapi_x86_64_pc_windows_gnu_0_4_0_features."default".from_winapi_0_3_4__default = true;
  winapi_build_0_1_1 = winapi_build_0_1_1_ rec {};
  winapi_i686_pc_windows_gnu_0_4_0 = winapi_i686_pc_windows_gnu_0_4_0_ rec {};
  winapi_x86_64_pc_windows_gnu_0_4_0 = winapi_x86_64_pc_windows_gnu_0_4_0_ rec {};
}
